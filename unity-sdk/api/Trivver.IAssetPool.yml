### YamlMime:ManagedReference
items:
- uid: Trivver.IAssetPool
  commentId: T:Trivver.IAssetPool
  id: IAssetPool
  parent: Trivver
  children:
  - Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable{System.String})
  - Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable{System.String},System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  - Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable{Trivver.SyncedAdSpotInfo},System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  - Trivver.IAssetPool.CacheAssetsForGame
  - Trivver.IAssetPool.CacheAssetsForGame(System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  - Trivver.IAssetPool.CacheAssetsForScene(System.String)
  - Trivver.IAssetPool.CacheAssetsForScene(System.String,System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  - Trivver.IAssetPool.IsAssetPreloaded(System.String)
  - Trivver.IAssetPool.LoadCommonAssets(System.Int32,System.Action,System.Action{System.Exception})
  langs:
  - csharp
  - vb
  name: IAssetPool
  nameWithType: IAssetPool
  fullName: Trivver.IAssetPool
  type: Interface
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: IAssetPool
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
    startLine: 12
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nHolds cache of Assets. Allows to request branded object loading, and subscribe on it\n"
  example: []
  syntax:
    content: public interface IAssetPool
    content.vb: Public Interface IAssetPool
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Trivver.IAssetPool.IsAssetPreloaded(System.String)
  commentId: M:Trivver.IAssetPool.IsAssetPreloaded(System.String)
  id: IsAssetPreloaded(System.String)
  parent: Trivver.IAssetPool
  langs:
  - csharp
  - vb
  name: IsAssetPreloaded(String)
  nameWithType: IAssetPool.IsAssetPreloaded(String)
  fullName: Trivver.IAssetPool.IsAssetPreloaded(System.String)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: IsAssetPreloaded
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
    startLine: 19
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nReturns true if object with given \n"
  example: []
  syntax:
    content: bool IsAssetPreloaded(string adSpotUid)
    content.vb: Function IsAssetPreloaded(adSpotUid As String) As Boolean
    parameters:
    - id: adSpotUid
      type: System.String
    return:
      type: System.Boolean
      description: ''
  overload: Trivver.IAssetPool.IsAssetPreloaded*
- uid: Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable{System.String})
  id: CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable{System.String})
  parent: Trivver.IAssetPool
  langs:
  - csharp
  - vb
  name: CacheAssetsForAdSpots(IEnumerable<String>)
  nameWithType: IAssetPool.CacheAssetsForAdSpots(IEnumerable<String>)
  fullName: Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: CacheAssetsForAdSpots
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
    startLine: 28
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nStart pre-loading of Assets (branded); for given AdSpots. Returns IObservable which can be used in order \nto subscribe on job completion/interruption/progress.\nSee example in CacheAssetsExample.cs\n"
  example: []
  syntax:
    content: IObservable<List<string>> CacheAssetsForAdSpots(IEnumerable<string> adSpotUids)
    content.vb: Function CacheAssetsForAdSpots(adSpotUids As IEnumerable(Of String)) As IObservable(Of List(Of String))
    parameters:
    - id: adSpotUids
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
    return:
      type: Trivver.IObservable{System.Collections.Generic.List{System.String}}
      description: Observable for list of UIDs of loaded assets
  overload: Trivver.IAssetPool.CacheAssetsForAdSpots*
  nameWithType.vb: IAssetPool.CacheAssetsForAdSpots(IEnumerable(Of String))
  fullName.vb: Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: CacheAssetsForAdSpots(IEnumerable(Of String))
- uid: Trivver.IAssetPool.CacheAssetsForScene(System.String)
  commentId: M:Trivver.IAssetPool.CacheAssetsForScene(System.String)
  id: CacheAssetsForScene(System.String)
  parent: Trivver.IAssetPool
  langs:
  - csharp
  - vb
  name: CacheAssetsForScene(String)
  nameWithType: IAssetPool.CacheAssetsForScene(String)
  fullName: Trivver.IAssetPool.CacheAssetsForScene(System.String)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: CacheAssetsForScene
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
    startLine: 39
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nStart pre-loading of Assets (branded); for given scene. Returns IObservable which can be used in order \nto subscribe on job completion/interruption/progress.\nSee example in CacheAssetsExample.cs\n\nNote: If several scenes have same name - load all assets for those scenes\n"
  example: []
  syntax:
    content: IObservable<List<string>> CacheAssetsForScene(string sceneName)
    content.vb: Function CacheAssetsForScene(sceneName As String) As IObservable(Of List(Of String))
    parameters:
    - id: sceneName
      type: System.String
      description: ''
    return:
      type: Trivver.IObservable{System.Collections.Generic.List{System.String}}
      description: Observable for list of UIDs of loaded assets
  overload: Trivver.IAssetPool.CacheAssetsForScene*
- uid: Trivver.IAssetPool.CacheAssetsForGame
  commentId: M:Trivver.IAssetPool.CacheAssetsForGame
  id: CacheAssetsForGame
  parent: Trivver.IAssetPool
  langs:
  - csharp
  - vb
  name: CacheAssetsForGame()
  nameWithType: IAssetPool.CacheAssetsForGame()
  fullName: Trivver.IAssetPool.CacheAssetsForGame()
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: CacheAssetsForGame
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
    startLine: 47
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nStart pre-loading of Assets (branded); for whole game. Returns IObservable which can be used in order \nto subscribe on job completion/interruption/progress.\nSee example in CacheAssetsExample.cs\n"
  example: []
  syntax:
    content: IObservable<List<string>> CacheAssetsForGame()
    content.vb: Function CacheAssetsForGame As IObservable(Of List(Of String))
    return:
      type: Trivver.IObservable{System.Collections.Generic.List{System.String}}
      description: Observable for list of UIDs of loaded assets
  overload: Trivver.IAssetPool.CacheAssetsForGame*
- uid: Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable{System.String},System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  commentId: M:Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable{System.String},System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  id: CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable{System.String},System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  parent: Trivver.IAssetPool
  langs:
  - csharp
  - vb
  name: CacheAssetsForAdSpots(IEnumerable<String>, Action, OnInterruptedHandler, Action<Single>)
  nameWithType: IAssetPool.CacheAssetsForAdSpots(IEnumerable<String>, Action, OnInterruptedHandler, Action<Single>)
  fullName: Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable<System.String>, System.Action, Trivver.OnInterruptedHandler, System.Action<System.Single>)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: CacheAssetsForAdSpots
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
    startLine: 56
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nStart pre-loading of Assets (branded); for given AdSpots.\n"
  example: []
  syntax:
    content: void CacheAssetsForAdSpots(IEnumerable<string> adSpotUids, Action onComplete, OnInterruptedHandler onInterupt, Action<float> onProgress = null)
    content.vb: Sub CacheAssetsForAdSpots(adSpotUids As IEnumerable(Of String), onComplete As Action, onInterupt As OnInterruptedHandler, onProgress As Action(Of Single) = Nothing)
    parameters:
    - id: adSpotUids
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
    - id: onComplete
      type: System.Action
      description: ''
    - id: onInterupt
      type: Trivver.OnInterruptedHandler
      description: ''
    - id: onProgress
      type: System.Action{System.Single}
      description: ''
  overload: Trivver.IAssetPool.CacheAssetsForAdSpots*
  nameWithType.vb: IAssetPool.CacheAssetsForAdSpots(IEnumerable(Of String), Action, OnInterruptedHandler, Action(Of Single))
  fullName.vb: Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable(Of System.String), System.Action, Trivver.OnInterruptedHandler, System.Action(Of System.Single))
  name.vb: CacheAssetsForAdSpots(IEnumerable(Of String), Action, OnInterruptedHandler, Action(Of Single))
- uid: Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable{Trivver.SyncedAdSpotInfo},System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  commentId: M:Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable{Trivver.SyncedAdSpotInfo},System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  id: CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable{Trivver.SyncedAdSpotInfo},System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  parent: Trivver.IAssetPool
  langs:
  - csharp
  - vb
  name: CacheAssetsForAdSpots(IEnumerable<SyncedAdSpotInfo>, Action, OnInterruptedHandler, Action<Single>)
  nameWithType: IAssetPool.CacheAssetsForAdSpots(IEnumerable<SyncedAdSpotInfo>, Action, OnInterruptedHandler, Action<Single>)
  fullName: Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable<Trivver.SyncedAdSpotInfo>, System.Action, Trivver.OnInterruptedHandler, System.Action<System.Single>)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: CacheAssetsForAdSpots
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
    startLine: 69
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nStart pre-loading of Assets (branded); for given AdSpots.\n"
  example: []
  syntax:
    content: void CacheAssetsForAdSpots(IEnumerable<SyncedAdSpotInfo> adSpotsInfo, Action onComplete, OnInterruptedHandler onInterupt, Action<float> onProgress = null)
    content.vb: Sub CacheAssetsForAdSpots(adSpotsInfo As IEnumerable(Of SyncedAdSpotInfo), onComplete As Action, onInterupt As OnInterruptedHandler, onProgress As Action(Of Single) = Nothing)
    parameters:
    - id: adSpotsInfo
      type: System.Collections.Generic.IEnumerable{Trivver.SyncedAdSpotInfo}
      description: ''
    - id: onComplete
      type: System.Action
      description: ''
    - id: onInterupt
      type: Trivver.OnInterruptedHandler
      description: ''
    - id: onProgress
      type: System.Action{System.Single}
      description: ''
  overload: Trivver.IAssetPool.CacheAssetsForAdSpots*
  nameWithType.vb: IAssetPool.CacheAssetsForAdSpots(IEnumerable(Of SyncedAdSpotInfo), Action, OnInterruptedHandler, Action(Of Single))
  fullName.vb: Trivver.IAssetPool.CacheAssetsForAdSpots(System.Collections.Generic.IEnumerable(Of Trivver.SyncedAdSpotInfo), System.Action, Trivver.OnInterruptedHandler, System.Action(Of System.Single))
  name.vb: CacheAssetsForAdSpots(IEnumerable(Of SyncedAdSpotInfo), Action, OnInterruptedHandler, Action(Of Single))
- uid: Trivver.IAssetPool.CacheAssetsForScene(System.String,System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  commentId: M:Trivver.IAssetPool.CacheAssetsForScene(System.String,System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  id: CacheAssetsForScene(System.String,System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  parent: Trivver.IAssetPool
  langs:
  - csharp
  - vb
  name: CacheAssetsForScene(String, Action, OnInterruptedHandler, Action<Single>)
  nameWithType: IAssetPool.CacheAssetsForScene(String, Action, OnInterruptedHandler, Action<Single>)
  fullName: Trivver.IAssetPool.CacheAssetsForScene(System.String, System.Action, Trivver.OnInterruptedHandler, System.Action<System.Single>)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: CacheAssetsForScene
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
    startLine: 84
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nStart pre-loading of Assets(branded); for given scene.\n\nNote: If several scenes have same name - load all assets for those scenes\n"
  example: []
  syntax:
    content: void CacheAssetsForScene(string sceneName, Action onComplete, OnInterruptedHandler onInterupt, Action<float> onProgress = null)
    content.vb: Sub CacheAssetsForScene(sceneName As String, onComplete As Action, onInterupt As OnInterruptedHandler, onProgress As Action(Of Single) = Nothing)
    parameters:
    - id: sceneName
      type: System.String
      description: ''
    - id: onComplete
      type: System.Action
      description: ''
    - id: onInterupt
      type: Trivver.OnInterruptedHandler
      description: ''
    - id: onProgress
      type: System.Action{System.Single}
      description: ''
  overload: Trivver.IAssetPool.CacheAssetsForScene*
  nameWithType.vb: IAssetPool.CacheAssetsForScene(String, Action, OnInterruptedHandler, Action(Of Single))
  fullName.vb: Trivver.IAssetPool.CacheAssetsForScene(System.String, System.Action, Trivver.OnInterruptedHandler, System.Action(Of System.Single))
  name.vb: CacheAssetsForScene(String, Action, OnInterruptedHandler, Action(Of Single))
- uid: Trivver.IAssetPool.CacheAssetsForGame(System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  commentId: M:Trivver.IAssetPool.CacheAssetsForGame(System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  id: CacheAssetsForGame(System.Action,Trivver.OnInterruptedHandler,System.Action{System.Single})
  parent: Trivver.IAssetPool
  langs:
  - csharp
  - vb
  name: CacheAssetsForGame(Action, OnInterruptedHandler, Action<Single>)
  nameWithType: IAssetPool.CacheAssetsForGame(Action, OnInterruptedHandler, Action<Single>)
  fullName: Trivver.IAssetPool.CacheAssetsForGame(System.Action, Trivver.OnInterruptedHandler, System.Action<System.Single>)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: CacheAssetsForGame
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
    startLine: 96
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nStart pre-loading of Assets (branded); for whole game.\n"
  example: []
  syntax:
    content: void CacheAssetsForGame(Action onComplete, OnInterruptedHandler onInterupt, Action<float> onProgress = null)
    content.vb: Sub CacheAssetsForGame(onComplete As Action, onInterupt As OnInterruptedHandler, onProgress As Action(Of Single) = Nothing)
    parameters:
    - id: onComplete
      type: System.Action
      description: ''
    - id: onInterupt
      type: Trivver.OnInterruptedHandler
      description: ''
    - id: onProgress
      type: System.Action{System.Single}
      description: ''
  overload: Trivver.IAssetPool.CacheAssetsForGame*
  nameWithType.vb: IAssetPool.CacheAssetsForGame(Action, OnInterruptedHandler, Action(Of Single))
  fullName.vb: Trivver.IAssetPool.CacheAssetsForGame(System.Action, Trivver.OnInterruptedHandler, System.Action(Of System.Single))
  name.vb: CacheAssetsForGame(Action, OnInterruptedHandler, Action(Of Single))
- uid: Trivver.IAssetPool.LoadCommonAssets(System.Int32,System.Action,System.Action{System.Exception})
  commentId: M:Trivver.IAssetPool.LoadCommonAssets(System.Int32,System.Action,System.Action{System.Exception})
  id: LoadCommonAssets(System.Int32,System.Action,System.Action{System.Exception})
  parent: Trivver.IAssetPool
  langs:
  - csharp
  - vb
  name: LoadCommonAssets(Int32, Action, Action<Exception>)
  nameWithType: IAssetPool.LoadCommonAssets(Int32, Action, Action<Exception>)
  fullName: Trivver.IAssetPool.LoadCommonAssets(System.Int32, System.Action, System.Action<System.Exception>)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: LoadCommonAssets
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Interfaces/IAssetPool.cs
    startLine: 107
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nStart loading of common assets from the server.\n"
  example: []
  syntax:
    content: void LoadCommonAssets(int limit, Action onCompleted, Action<Exception> onError = null)
    content.vb: Sub LoadCommonAssets(limit As Integer, onCompleted As Action, onError As Action(Of Exception) = Nothing)
    parameters:
    - id: limit
      type: System.Int32
      description: Maximum number of assets that will be received from the server.
    - id: onCompleted
      type: System.Action
      description: Called when all assets are preloaded.
    - id: onError
      type: System.Action{System.Exception}
      description: Called if error occurred while getting the list of available assets.
  overload: Trivver.IAssetPool.LoadCommonAssets*
  nameWithType.vb: IAssetPool.LoadCommonAssets(Int32, Action, Action(Of Exception))
  fullName.vb: Trivver.IAssetPool.LoadCommonAssets(System.Int32, System.Action, System.Action(Of System.Exception))
  name.vb: LoadCommonAssets(Int32, Action, Action(Of Exception))
references:
- uid: Trivver
  commentId: N:Trivver
  isExternal: false
  name: Trivver
  nameWithType: Trivver
  fullName: Trivver
- uid: Trivver.IAssetPool.IsAssetPreloaded*
  commentId: Overload:Trivver.IAssetPool.IsAssetPreloaded
  isExternal: false
  name: IsAssetPreloaded
  nameWithType: IAssetPool.IsAssetPreloaded
  fullName: Trivver.IAssetPool.IsAssetPreloaded
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Trivver.IAssetPool.CacheAssetsForAdSpots*
  commentId: Overload:Trivver.IAssetPool.CacheAssetsForAdSpots
  isExternal: false
  name: CacheAssetsForAdSpots
  nameWithType: IAssetPool.CacheAssetsForAdSpots
  fullName: Trivver.IAssetPool.CacheAssetsForAdSpots
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Trivver.IObservable{System.Collections.Generic.List{System.String}}
  commentId: T:Trivver.IObservable{System.Collections.Generic.List{System.String}}
  parent: Trivver
  definition: Trivver.IObservable`1
  name: IObservable<List<String>>
  nameWithType: IObservable<List<String>>
  fullName: Trivver.IObservable<System.Collections.Generic.List<System.String>>
  nameWithType.vb: IObservable(Of List(Of String))
  fullname.vb: Trivver.IObservable(Of System.Collections.Generic.List(Of System.String))
  name.vb: IObservable(Of List(Of String))
  spec.csharp:
  - uid: Trivver.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: Trivver.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Trivver.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: Trivver.IObservable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Trivver.IObservable`1
  commentId: T:Trivver.IObservable`1
  isExternal: false
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: Trivver.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullname.vb: Trivver.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: Trivver.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: Trivver.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Trivver.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: Trivver.IObservable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Trivver.IAssetPool.CacheAssetsForScene*
  commentId: Overload:Trivver.IAssetPool.CacheAssetsForScene
  isExternal: false
  name: CacheAssetsForScene
  nameWithType: IAssetPool.CacheAssetsForScene
  fullName: Trivver.IAssetPool.CacheAssetsForScene
- uid: Trivver.IAssetPool.CacheAssetsForGame*
  commentId: Overload:Trivver.IAssetPool.CacheAssetsForGame
  isExternal: false
  name: CacheAssetsForGame
  nameWithType: IAssetPool.CacheAssetsForGame
  fullName: Trivver.IAssetPool.CacheAssetsForGame
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Trivver.OnInterruptedHandler
  commentId: T:Trivver.OnInterruptedHandler
  parent: Trivver
  isExternal: false
  name: OnInterruptedHandler
  nameWithType: OnInterruptedHandler
  fullName: Trivver.OnInterruptedHandler
- uid: System.Action{System.Single}
  commentId: T:System.Action{System.Single}
  parent: System
  definition: System.Action`1
  name: Action<Single>
  nameWithType: Action<Single>
  fullName: System.Action<System.Single>
  nameWithType.vb: Action(Of Single)
  fullname.vb: System.Action(Of System.Single)
  name.vb: Action(Of Single)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Trivver.SyncedAdSpotInfo}
  commentId: T:System.Collections.Generic.IEnumerable{Trivver.SyncedAdSpotInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SyncedAdSpotInfo>
  nameWithType: IEnumerable<SyncedAdSpotInfo>
  fullName: System.Collections.Generic.IEnumerable<Trivver.SyncedAdSpotInfo>
  nameWithType.vb: IEnumerable(Of SyncedAdSpotInfo)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Trivver.SyncedAdSpotInfo)
  name.vb: IEnumerable(Of SyncedAdSpotInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Trivver.SyncedAdSpotInfo
    name: SyncedAdSpotInfo
    nameWithType: SyncedAdSpotInfo
    fullName: Trivver.SyncedAdSpotInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Trivver.SyncedAdSpotInfo
    name: SyncedAdSpotInfo
    nameWithType: SyncedAdSpotInfo
    fullName: Trivver.SyncedAdSpotInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Trivver.IAssetPool.LoadCommonAssets*
  commentId: Overload:Trivver.IAssetPool.LoadCommonAssets
  isExternal: false
  name: LoadCommonAssets
  nameWithType: IAssetPool.LoadCommonAssets
  fullName: Trivver.IAssetPool.LoadCommonAssets
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Action{System.Exception}
  commentId: T:System.Action{System.Exception}
  parent: System
  definition: System.Action`1
  name: Action<Exception>
  nameWithType: Action<Exception>
  fullName: System.Action<System.Exception>
  nameWithType.vb: Action(Of Exception)
  fullname.vb: System.Action(Of System.Exception)
  name.vb: Action(Of Exception)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
