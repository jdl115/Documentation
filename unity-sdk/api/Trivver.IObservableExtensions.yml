### YamlMime:ManagedReference
items:
- uid: Trivver.IObservableExtensions
  commentId: T:Trivver.IObservableExtensions
  id: IObservableExtensions
  parent: Trivver
  children:
  - Trivver.IObservableExtensions.Subscribe``1(Trivver.IObservable{``0},System.Action{``0},Trivver.OnInterruptedHandler)
  - Trivver.IObservableExtensions.Subscribe``1(Trivver.IObservable{``0},System.Action{``0},Trivver.OnInterruptedHandler,System.Action{System.Single})
  langs:
  - csharp
  - vb
  name: IObservableExtensions
  nameWithType: IObservableExtensions
  fullName: Trivver.IObservableExtensions
  type: Class
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/IObservableExtensions.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: IObservableExtensions
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/IObservableExtensions.cs
    startLine: 8
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nExtension methods for IObservable interface\n"
  example: []
  syntax:
    content: public static class IObservableExtensions
    content.vb: Public Module IObservableExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Trivver.IObservableExtensions.Subscribe``1(Trivver.IObservable{``0},System.Action{``0},Trivver.OnInterruptedHandler)
  commentId: M:Trivver.IObservableExtensions.Subscribe``1(Trivver.IObservable{``0},System.Action{``0},Trivver.OnInterruptedHandler)
  id: Subscribe``1(Trivver.IObservable{``0},System.Action{``0},Trivver.OnInterruptedHandler)
  isExtensionMethod: true
  parent: Trivver.IObservableExtensions
  langs:
  - csharp
  - vb
  name: Subscribe<T>(IObservable<T>, Action<T>, OnInterruptedHandler)
  nameWithType: IObservableExtensions.Subscribe<T>(IObservable<T>, Action<T>, OnInterruptedHandler)
  fullName: Trivver.IObservableExtensions.Subscribe<T>(Trivver.IObservable<T>, System.Action<T>, Trivver.OnInterruptedHandler)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/IObservableExtensions.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: Subscribe
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/IObservableExtensions.cs
    startLine: 19
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nThis extension method allows to not pass IObserver to IObservable.Subscribe method, instead it allows to pass two functors\nand creates simple IObserver successor internally\n"
  example: []
  syntax:
    content: public static IDisposable Subscribe<T>(this IObservable<T> observable, Action<T> onCompleted, OnInterruptedHandler onInterrupted)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Subscribe(Of T)(observable As IObservable(Of T), onCompleted As Action(Of T), onInterrupted As OnInterruptedHandler) As IDisposable
    parameters:
    - id: observable
      type: Trivver.IObservable{{T}}
      description: ''
    - id: onCompleted
      type: System.Action{{T}}
      description: ''
    - id: onInterrupted
      type: Trivver.OnInterruptedHandler
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.IDisposable
      description: ''
  overload: Trivver.IObservableExtensions.Subscribe*
  nameWithType.vb: IObservableExtensions.Subscribe(Of T)(IObservable(Of T), Action(Of T), OnInterruptedHandler)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Trivver.IObservableExtensions.Subscribe(Of T)(Trivver.IObservable(Of T), System.Action(Of T), Trivver.OnInterruptedHandler)
  name.vb: Subscribe(Of T)(IObservable(Of T), Action(Of T), OnInterruptedHandler)
- uid: Trivver.IObservableExtensions.Subscribe``1(Trivver.IObservable{``0},System.Action{``0},Trivver.OnInterruptedHandler,System.Action{System.Single})
  commentId: M:Trivver.IObservableExtensions.Subscribe``1(Trivver.IObservable{``0},System.Action{``0},Trivver.OnInterruptedHandler,System.Action{System.Single})
  id: Subscribe``1(Trivver.IObservable{``0},System.Action{``0},Trivver.OnInterruptedHandler,System.Action{System.Single})
  isExtensionMethod: true
  parent: Trivver.IObservableExtensions
  langs:
  - csharp
  - vb
  name: Subscribe<T>(IObservable<T>, Action<T>, OnInterruptedHandler, Action<Single>)
  nameWithType: IObservableExtensions.Subscribe<T>(IObservable<T>, Action<T>, OnInterruptedHandler, Action<Single>)
  fullName: Trivver.IObservableExtensions.Subscribe<T>(Trivver.IObservable<T>, System.Action<T>, Trivver.OnInterruptedHandler, System.Action<System.Single>)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/IObservableExtensions.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: Subscribe
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/IObservableExtensions.cs
    startLine: 34
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nThis extension method allows to not pass IObserver to IObservable.Subscribe method, instead it allows to pass functors\nand creates simple IObserver successor internally\n"
  example: []
  syntax:
    content: public static IDisposable Subscribe<T>(this IObservable<T> observable, Action<T> onCompleted, OnInterruptedHandler onInterrupted, Action<float> onProgress)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Subscribe(Of T)(observable As IObservable(Of T), onCompleted As Action(Of T), onInterrupted As OnInterruptedHandler, onProgress As Action(Of Single)) As IDisposable
    parameters:
    - id: observable
      type: Trivver.IObservable{{T}}
      description: ''
    - id: onCompleted
      type: System.Action{{T}}
      description: ''
    - id: onInterrupted
      type: Trivver.OnInterruptedHandler
      description: ''
    - id: onProgress
      type: System.Action{System.Single}
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.IDisposable
      description: ''
  overload: Trivver.IObservableExtensions.Subscribe*
  nameWithType.vb: IObservableExtensions.Subscribe(Of T)(IObservable(Of T), Action(Of T), OnInterruptedHandler, Action(Of Single))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Trivver.IObservableExtensions.Subscribe(Of T)(Trivver.IObservable(Of T), System.Action(Of T), Trivver.OnInterruptedHandler, System.Action(Of System.Single))
  name.vb: Subscribe(Of T)(IObservable(Of T), Action(Of T), OnInterruptedHandler, Action(Of Single))
references:
- uid: Trivver
  commentId: N:Trivver
  isExternal: false
  name: Trivver
  nameWithType: Trivver
  fullName: Trivver
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Trivver.IObservableExtensions.Subscribe*
  commentId: Overload:Trivver.IObservableExtensions.Subscribe
  isExternal: false
  name: Subscribe
  nameWithType: IObservableExtensions.Subscribe
  fullName: Trivver.IObservableExtensions.Subscribe
- uid: Trivver.IObservable{{T}}
  commentId: T:Trivver.IObservable{``0}
  parent: Trivver
  definition: Trivver.IObservable`1
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: Trivver.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullname.vb: Trivver.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: Trivver.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: Trivver.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Trivver.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: Trivver.IObservable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{{T}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Trivver.OnInterruptedHandler
  commentId: T:Trivver.OnInterruptedHandler
  parent: Trivver
  isExternal: false
  name: OnInterruptedHandler
  nameWithType: OnInterruptedHandler
  fullName: Trivver.OnInterruptedHandler
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Trivver.IObservable`1
  commentId: T:Trivver.IObservable`1
  isExternal: false
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: Trivver.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullname.vb: Trivver.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: Trivver.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: Trivver.IObservable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Trivver.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: Trivver.IObservable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Single}
  commentId: T:System.Action{System.Single}
  parent: System
  definition: System.Action`1
  name: Action<Single>
  nameWithType: Action<Single>
  fullName: System.Action<System.Single>
  nameWithType.vb: Action(Of Single)
  fullname.vb: System.Action(Of System.Single)
  name.vb: Action(Of Single)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
