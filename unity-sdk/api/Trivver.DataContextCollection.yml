### YamlMime:ManagedReference
items:
- uid: Trivver.DataContextCollection
  commentId: T:Trivver.DataContextCollection
  id: DataContextCollection
  parent: Trivver
  children:
  - Trivver.DataContextCollection.GetCount
  - Trivver.DataContextCollection.GetDataContext(System.Int32)
  - Trivver.DataContextCollection.Insert(System.Int32,System.Object)
  - Trivver.DataContextCollection.ItemKey
  - Trivver.DataContextCollection.OnInsert
  - Trivver.DataContextCollection.OnRemove
  - Trivver.DataContextCollection.RemoveAt(System.Int32)
  - Trivver.DataContextCollection.Replace(System.Int32,System.Object)
  - Trivver.DataContextCollection.ToList
  langs:
  - csharp
  - vb
  name: DataContextCollection
  nameWithType: DataContextCollection
  fullName: Trivver.DataContextCollection
  type: Class
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: DataContextCollection
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
    startLine: 8
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nDataContextCollection is ObsevableCollection data backend. It is like DataContext but for collections.\n"
  example: []
  syntax:
    content: public class DataContextCollection
    content.vb: Public Class DataContextCollection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Trivver.DataContextCollection.ItemKey
  commentId: F:Trivver.DataContextCollection.ItemKey
  id: ItemKey
  parent: Trivver.DataContextCollection
  langs:
  - csharp
  - vb
  name: ItemKey
  nameWithType: DataContextCollection.ItemKey
  fullName: Trivver.DataContextCollection.ItemKey
  type: Field
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: ItemKey
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
    startLine: 18
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nDefault key name\n"
  example: []
  syntax:
    content: public const string ItemKey = "item"
    content.vb: Public Const ItemKey As String = "item"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Trivver.DataContextCollection.OnInsert
  commentId: E:Trivver.DataContextCollection.OnInsert
  id: OnInsert
  parent: Trivver.DataContextCollection
  langs:
  - csharp
  - vb
  name: OnInsert
  nameWithType: DataContextCollection.OnInsert
  fullName: Trivver.DataContextCollection.OnInsert
  type: Event
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: OnInsert
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
    startLine: 23
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nEvent which allows to subscribe on adding element to array.\n"
  example: []
  syntax:
    content: public event Action<DataContext, int> OnInsert
    content.vb: Public Event OnInsert As Action(Of DataContext, Integer)
    return:
      type: System.Action{Trivver.DataContext,System.Int32}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Trivver.DataContextCollection.OnRemove
  commentId: E:Trivver.DataContextCollection.OnRemove
  id: OnRemove
  parent: Trivver.DataContextCollection
  langs:
  - csharp
  - vb
  name: OnRemove
  nameWithType: DataContextCollection.OnRemove
  fullName: Trivver.DataContextCollection.OnRemove
  type: Event
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: OnRemove
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
    startLine: 28
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nEvent which allows to subscribe on Removing element to array.\n"
  example: []
  syntax:
    content: public event Action<int> OnRemove
    content.vb: Public Event OnRemove As Action(Of Integer)
    return:
      type: System.Action{System.Int32}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Trivver.DataContextCollection.Insert(System.Int32,System.Object)
  commentId: M:Trivver.DataContextCollection.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: Trivver.DataContextCollection
  langs:
  - csharp
  - vb
  name: Insert(Int32, Object)
  nameWithType: DataContextCollection.Insert(Int32, Object)
  fullName: Trivver.DataContextCollection.Insert(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: Insert
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
    startLine: 35
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nInsert new element by given index, fire OnInsert event\n"
  example: []
  syntax:
    content: public void Insert(int index, object value)
    content.vb: Public Sub Insert(index As Integer, value As Object)
    parameters:
    - id: index
      type: System.Int32
      description: ''
    - id: value
      type: System.Object
      description: ''
  overload: Trivver.DataContextCollection.Insert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Trivver.DataContextCollection.RemoveAt(System.Int32)
  commentId: M:Trivver.DataContextCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: Trivver.DataContextCollection
  langs:
  - csharp
  - vb
  name: RemoveAt(Int32)
  nameWithType: DataContextCollection.RemoveAt(Int32)
  fullName: Trivver.DataContextCollection.RemoveAt(System.Int32)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: RemoveAt
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
    startLine: 51
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nRemove element by given index, fire OnRemove event\n"
  example: []
  syntax:
    content: public void RemoveAt(int index)
    content.vb: Public Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
      description: ''
  overload: Trivver.DataContextCollection.RemoveAt*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Trivver.DataContextCollection.Replace(System.Int32,System.Object)
  commentId: M:Trivver.DataContextCollection.Replace(System.Int32,System.Object)
  id: Replace(System.Int32,System.Object)
  parent: Trivver.DataContextCollection
  langs:
  - csharp
  - vb
  name: Replace(Int32, Object)
  nameWithType: DataContextCollection.Replace(Int32, Object)
  fullName: Trivver.DataContextCollection.Replace(System.Int32, System.Object)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: Replace
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
    startLine: 66
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nReplace element by given index - there is not specific event for replace.\nBut since all collection items are stored as DataContex['item'] replace is automatically tracked by OnContextChanged event\n"
  example: []
  syntax:
    content: public void Replace(int index, object value)
    content.vb: Public Sub Replace(index As Integer, value As Object)
    parameters:
    - id: index
      type: System.Int32
      description: ''
    - id: value
      type: System.Object
      description: ''
  overload: Trivver.DataContextCollection.Replace*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Trivver.DataContextCollection.GetDataContext(System.Int32)
  commentId: M:Trivver.DataContextCollection.GetDataContext(System.Int32)
  id: GetDataContext(System.Int32)
  parent: Trivver.DataContextCollection
  langs:
  - csharp
  - vb
  name: GetDataContext(Int32)
  nameWithType: DataContextCollection.GetDataContext(Int32)
  fullName: Trivver.DataContextCollection.GetDataContext(System.Int32)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: GetDataContext
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
    startLine: 77
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nGet DataContext by key\n"
  example: []
  syntax:
    content: public DataContext GetDataContext(int index)
    content.vb: Public Function GetDataContext(index As Integer) As DataContext
    parameters:
    - id: index
      type: System.Int32
      description: ''
    return:
      type: Trivver.DataContext
      description: ''
  overload: Trivver.DataContextCollection.GetDataContext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Trivver.DataContextCollection.GetCount
  commentId: M:Trivver.DataContextCollection.GetCount
  id: GetCount
  parent: Trivver.DataContextCollection
  langs:
  - csharp
  - vb
  name: GetCount()
  nameWithType: DataContextCollection.GetCount()
  fullName: Trivver.DataContextCollection.GetCount()
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: GetCount
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
    startLine: 86
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nReturns count of elements in collection\n"
  example: []
  syntax:
    content: public int GetCount()
    content.vb: Public Function GetCount As Integer
    return:
      type: System.Int32
      description: ''
  overload: Trivver.DataContextCollection.GetCount*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Trivver.DataContextCollection.ToList
  commentId: M:Trivver.DataContextCollection.ToList
  id: ToList
  parent: Trivver.DataContextCollection
  langs:
  - csharp
  - vb
  name: ToList()
  nameWithType: DataContextCollection.ToList()
  fullName: Trivver.DataContextCollection.ToList()
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: ToList
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/DataContextCollection.cs
    startLine: 91
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  syntax:
    content: public List<DataContext> ToList()
    content.vb: Public Function ToList As List(Of DataContext)
    return:
      type: System.Collections.Generic.List{Trivver.DataContext}
  overload: Trivver.DataContextCollection.ToList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Trivver
  commentId: N:Trivver
  isExternal: false
  name: Trivver
  nameWithType: Trivver
  fullName: Trivver
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Action{Trivver.DataContext,System.Int32}
  commentId: T:System.Action{Trivver.DataContext,System.Int32}
  parent: System
  definition: System.Action`2
  name: Action<DataContext, Int32>
  nameWithType: Action<DataContext, Int32>
  fullName: System.Action<Trivver.DataContext, System.Int32>
  nameWithType.vb: Action(Of DataContext, Int32)
  fullname.vb: System.Action(Of Trivver.DataContext, System.Int32)
  name.vb: Action(Of DataContext, Int32)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Trivver.DataContext
    name: DataContext
    nameWithType: DataContext
    fullName: Trivver.DataContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Trivver.DataContext
    name: DataContext
    nameWithType: DataContext
    fullName: Trivver.DataContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullname.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{System.Int32}
  commentId: T:System.Action{System.Int32}
  parent: System
  definition: System.Action`1
  name: Action<Int32>
  nameWithType: Action<Int32>
  fullName: System.Action<System.Int32>
  nameWithType.vb: Action(Of Int32)
  fullname.vb: System.Action(Of System.Int32)
  name.vb: Action(Of Int32)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullname.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Trivver.DataContextCollection.Insert*
  commentId: Overload:Trivver.DataContextCollection.Insert
  isExternal: false
  name: Insert
  nameWithType: DataContextCollection.Insert
  fullName: Trivver.DataContextCollection.Insert
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Trivver.DataContextCollection.RemoveAt*
  commentId: Overload:Trivver.DataContextCollection.RemoveAt
  isExternal: false
  name: RemoveAt
  nameWithType: DataContextCollection.RemoveAt
  fullName: Trivver.DataContextCollection.RemoveAt
- uid: Trivver.DataContextCollection.Replace*
  commentId: Overload:Trivver.DataContextCollection.Replace
  isExternal: false
  name: Replace
  nameWithType: DataContextCollection.Replace
  fullName: Trivver.DataContextCollection.Replace
- uid: Trivver.DataContextCollection.GetDataContext*
  commentId: Overload:Trivver.DataContextCollection.GetDataContext
  isExternal: false
  name: GetDataContext
  nameWithType: DataContextCollection.GetDataContext
  fullName: Trivver.DataContextCollection.GetDataContext
- uid: Trivver.DataContext
  commentId: T:Trivver.DataContext
  parent: Trivver
  isExternal: false
  name: DataContext
  nameWithType: DataContext
  fullName: Trivver.DataContext
- uid: Trivver.DataContextCollection.GetCount*
  commentId: Overload:Trivver.DataContextCollection.GetCount
  isExternal: false
  name: GetCount
  nameWithType: DataContextCollection.GetCount
  fullName: Trivver.DataContextCollection.GetCount
- uid: Trivver.DataContextCollection.ToList*
  commentId: Overload:Trivver.DataContextCollection.ToList
  isExternal: false
  name: ToList
  nameWithType: DataContextCollection.ToList
  fullName: Trivver.DataContextCollection.ToList
- uid: System.Collections.Generic.List{Trivver.DataContext}
  commentId: T:System.Collections.Generic.List{Trivver.DataContext}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DataContext>
  nameWithType: List<DataContext>
  fullName: System.Collections.Generic.List<Trivver.DataContext>
  nameWithType.vb: List(Of DataContext)
  fullname.vb: System.Collections.Generic.List(Of Trivver.DataContext)
  name.vb: List(Of DataContext)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Trivver.DataContext
    name: DataContext
    nameWithType: DataContext
    fullName: Trivver.DataContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Trivver.DataContext
    name: DataContext
    nameWithType: DataContext
    fullName: Trivver.DataContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
