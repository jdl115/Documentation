### YamlMime:ManagedReference
items:
- uid: Trivver.ViewModelBase
  commentId: T:Trivver.ViewModelBase
  id: ViewModelBase
  parent: Trivver
  children:
  - Trivver.ViewModelBase.#ctor
  - Trivver.ViewModelBase.DataContext
  - Trivver.ViewModelBase.GetViewModelParameters(System.Type)
  - Trivver.ViewModelBase.propertiesRegistry
  - Trivver.ViewModelBase.RegisterProperty(System.Type,Trivver.IBindablePropertyMetadata)
  langs:
  - csharp
  - vb
  name: ViewModelBase
  nameWithType: ViewModelBase
  fullName: Trivver.ViewModelBase
  type: Class
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/ViewModelBase.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: ViewModelBase
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/ViewModelBase.cs
    startLine: 71
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nBase class for all ViewModels\n"
  example: []
  syntax:
    content: public abstract class ViewModelBase
    content.vb: Public MustInherit Class ViewModelBase
  inheritance:
  - System.Object
  derivedClasses:
  - Trivver.AssetViewModel
  - Trivver.SmartTabViewModel
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Trivver.ViewModelBase.propertiesRegistry
  commentId: F:Trivver.ViewModelBase.propertiesRegistry
  id: propertiesRegistry
  parent: Trivver.ViewModelBase
  langs:
  - csharp
  - vb
  name: propertiesRegistry
  nameWithType: ViewModelBase.propertiesRegistry
  fullName: Trivver.ViewModelBase.propertiesRegistry
  type: Field
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/ViewModelBase.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: propertiesRegistry
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/ViewModelBase.cs
    startLine: 86
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nRegistry of existing ViewModes and theirs properties.\n"
  example: []
  syntax:
    content: public static readonly Dictionary<Type, List<IBindablePropertyMetadata>> propertiesRegistry
    content.vb: Public Shared ReadOnly propertiesRegistry As Dictionary(Of Type, List(Of IBindablePropertyMetadata))
    return:
      type: System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.List{Trivver.IBindablePropertyMetadata}}
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Trivver.ViewModelBase.RegisterProperty(System.Type,Trivver.IBindablePropertyMetadata)
  commentId: M:Trivver.ViewModelBase.RegisterProperty(System.Type,Trivver.IBindablePropertyMetadata)
  id: RegisterProperty(System.Type,Trivver.IBindablePropertyMetadata)
  parent: Trivver.ViewModelBase
  langs:
  - csharp
  - vb
  name: RegisterProperty(Type, IBindablePropertyMetadata)
  nameWithType: ViewModelBase.RegisterProperty(Type, IBindablePropertyMetadata)
  fullName: Trivver.ViewModelBase.RegisterProperty(System.Type, Trivver.IBindablePropertyMetadata)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/ViewModelBase.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: RegisterProperty
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/ViewModelBase.cs
    startLine: 93
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nThis function is called from BindablePropertyMetadata constructor - each property registers itself.\n"
  example: []
  syntax:
    content: public static void RegisterProperty(Type viewModelType, IBindablePropertyMetadata meta)
    content.vb: Public Shared Sub RegisterProperty(viewModelType As Type, meta As IBindablePropertyMetadata)
    parameters:
    - id: viewModelType
      type: System.Type
      description: ''
    - id: meta
      type: Trivver.IBindablePropertyMetadata
      description: ''
  overload: Trivver.ViewModelBase.RegisterProperty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Trivver.ViewModelBase.GetViewModelParameters(System.Type)
  commentId: M:Trivver.ViewModelBase.GetViewModelParameters(System.Type)
  id: GetViewModelParameters(System.Type)
  parent: Trivver.ViewModelBase
  langs:
  - csharp
  - vb
  name: GetViewModelParameters(Type)
  nameWithType: ViewModelBase.GetViewModelParameters(Type)
  fullName: Trivver.ViewModelBase.GetViewModelParameters(System.Type)
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/ViewModelBase.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: GetViewModelParameters
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/ViewModelBase.cs
    startLine: 109
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nCollect property names for specific ViewModel.\n"
  example: []
  syntax:
    content: public static List<string> GetViewModelParameters(Type viewModelType)
    content.vb: Public Shared Function GetViewModelParameters(viewModelType As Type) As List(Of String)
    parameters:
    - id: viewModelType
      type: System.Type
      description: ''
    return:
      type: System.Collections.Generic.List{System.String}
      description: ''
  overload: Trivver.ViewModelBase.GetViewModelParameters*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Trivver.ViewModelBase.DataContext
  commentId: P:Trivver.ViewModelBase.DataContext
  id: DataContext
  parent: Trivver.ViewModelBase
  langs:
  - csharp
  - vb
  name: DataContext
  nameWithType: ViewModelBase.DataContext
  fullName: Trivver.ViewModelBase.DataContext
  type: Property
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/ViewModelBase.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: DataContext
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/ViewModelBase.cs
    startLine: 192
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nData context.\n"
  example: []
  syntax:
    content: public DataContext DataContext { get; }
    content.vb: Public ReadOnly Property DataContext As DataContext
    parameters: []
    return:
      type: Trivver.DataContext
  overload: Trivver.ViewModelBase.DataContext*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Trivver.ViewModelBase.#ctor
  commentId: M:Trivver.ViewModelBase.#ctor
  id: '#ctor'
  parent: Trivver.ViewModelBase
  langs:
  - csharp
  - vb
  name: ViewModelBase()
  nameWithType: ViewModelBase.ViewModelBase()
  fullName: Trivver.ViewModelBase.ViewModelBase()
  type: Constructor
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/ViewModelBase.cs
      branch: feature/triv-2221-ad-report
      repo: https://alexanderarbuznikov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: .ctor
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/SmartTab/MVVM/ViewModelBase.cs
    startLine: 197
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nConstructor, create DataContext -register all properties.\n"
  example: []
  syntax:
    content: protected ViewModelBase()
    content.vb: Protected Sub New
  overload: Trivver.ViewModelBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Trivver
  commentId: N:Trivver
  isExternal: false
  name: Trivver
  nameWithType: Trivver
  fullName: Trivver
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.List{Trivver.IBindablePropertyMetadata}}
  commentId: T:System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.List{Trivver.IBindablePropertyMetadata}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Type, List<IBindablePropertyMetadata>>
  nameWithType: Dictionary<Type, List<IBindablePropertyMetadata>>
  fullName: System.Collections.Generic.Dictionary<System.Type, System.Collections.Generic.List<Trivver.IBindablePropertyMetadata>>
  nameWithType.vb: Dictionary(Of Type, List(Of IBindablePropertyMetadata))
  fullname.vb: System.Collections.Generic.Dictionary(Of System.Type, System.Collections.Generic.List(Of Trivver.IBindablePropertyMetadata))
  name.vb: Dictionary(Of Type, List(Of IBindablePropertyMetadata))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Trivver.IBindablePropertyMetadata
    name: IBindablePropertyMetadata
    nameWithType: IBindablePropertyMetadata
    fullName: Trivver.IBindablePropertyMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Trivver.IBindablePropertyMetadata
    name: IBindablePropertyMetadata
    nameWithType: IBindablePropertyMetadata
    fullName: Trivver.IBindablePropertyMetadata
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Trivver.ViewModelBase.RegisterProperty*
  commentId: Overload:Trivver.ViewModelBase.RegisterProperty
  isExternal: false
  name: RegisterProperty
  nameWithType: ViewModelBase.RegisterProperty
  fullName: Trivver.ViewModelBase.RegisterProperty
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Trivver.IBindablePropertyMetadata
  commentId: T:Trivver.IBindablePropertyMetadata
  parent: Trivver
  isExternal: false
  name: IBindablePropertyMetadata
  nameWithType: IBindablePropertyMetadata
  fullName: Trivver.IBindablePropertyMetadata
- uid: Trivver.ViewModelBase.GetViewModelParameters*
  commentId: Overload:Trivver.ViewModelBase.GetViewModelParameters
  isExternal: false
  name: GetViewModelParameters
  nameWithType: ViewModelBase.GetViewModelParameters
  fullName: Trivver.ViewModelBase.GetViewModelParameters
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullname.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullname.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Trivver.ViewModelBase.DataContext*
  commentId: Overload:Trivver.ViewModelBase.DataContext
  isExternal: false
  name: DataContext
  nameWithType: ViewModelBase.DataContext
  fullName: Trivver.ViewModelBase.DataContext
- uid: Trivver.DataContext
  commentId: T:Trivver.DataContext
  parent: Trivver
  isExternal: false
  name: DataContext
  nameWithType: DataContext
  fullName: Trivver.DataContext
- uid: Trivver.ViewModelBase.#ctor*
  commentId: Overload:Trivver.ViewModelBase.#ctor
  isExternal: false
  name: ViewModelBase
  nameWithType: ViewModelBase.ViewModelBase
  fullName: Trivver.ViewModelBase.ViewModelBase
