### YamlMime:ManagedReference
items:
- uid: Trivver.Asset
  commentId: T:Trivver.Asset
  id: Asset
  parent: Trivver
  children:
  - Trivver.Asset.#ctor(Trivver.API.Model.AssetInfo,UnityEngine.GameObject)
  - Trivver.Asset.AssetInfo
  - Trivver.Asset.CreateEmpty
  - Trivver.Asset.GameObject
  - Trivver.Asset.Icon
  - Trivver.Asset.Image
  - Trivver.Asset.IsEmpty
  langs:
  - csharp
  - vb
  name: Asset
  nameWithType: Asset
  fullName: Trivver.Asset
  type: Class
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: Asset
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
    startLine: 10
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nHolds both AssetInfo and asset game object itself\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class Asset
    content.vb: >-
      <Serializable>

      Public Class Asset
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Trivver.Asset.#ctor(Trivver.API.Model.AssetInfo,UnityEngine.GameObject)
  commentId: M:Trivver.Asset.#ctor(Trivver.API.Model.AssetInfo,UnityEngine.GameObject)
  id: '#ctor(Trivver.API.Model.AssetInfo,UnityEngine.GameObject)'
  parent: Trivver.Asset
  langs:
  - csharp
  - vb
  name: Asset(AssetInfo, GameObject)
  nameWithType: Asset.Asset(AssetInfo, GameObject)
  fullName: Trivver.Asset.Asset(Trivver.API.Model.AssetInfo, UnityEngine.GameObject)
  type: Constructor
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: .ctor
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
    startLine: 13
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  syntax:
    content: public Asset(AssetInfo assetInfo, GameObject gameObject)
    content.vb: Public Sub New(assetInfo As AssetInfo, gameObject As GameObject)
    parameters:
    - id: assetInfo
      type: Trivver.API.Model.AssetInfo
    - id: gameObject
      type: UnityEngine.GameObject
  overload: Trivver.Asset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Trivver.Asset.IsEmpty
  commentId: P:Trivver.Asset.IsEmpty
  id: IsEmpty
  parent: Trivver.Asset
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: Asset.IsEmpty
  fullName: Trivver.Asset.IsEmpty
  type: Property
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: IsEmpty
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
    startLine: 22
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nReturns true if Asset object is empty -- does not contain real game object.\n"
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    content.vb: Public ReadOnly Property IsEmpty As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Trivver.Asset.IsEmpty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Trivver.Asset.CreateEmpty
  commentId: M:Trivver.Asset.CreateEmpty
  id: CreateEmpty
  parent: Trivver.Asset
  langs:
  - csharp
  - vb
  name: CreateEmpty()
  nameWithType: Asset.CreateEmpty()
  fullName: Trivver.Asset.CreateEmpty()
  type: Method
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: CreateEmpty
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
    startLine: 31
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nCreate empty Asset object\n"
  example: []
  syntax:
    content: public static Asset CreateEmpty()
    content.vb: Public Shared Function CreateEmpty As Asset
    return:
      type: Trivver.Asset
      description: ''
  overload: Trivver.Asset.CreateEmpty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Trivver.Asset.AssetInfo
  commentId: P:Trivver.Asset.AssetInfo
  id: AssetInfo
  parent: Trivver.Asset
  langs:
  - csharp
  - vb
  name: AssetInfo
  nameWithType: Asset.AssetInfo
  fullName: Trivver.Asset.AssetInfo
  type: Property
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: AssetInfo
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
    startLine: 41
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nAssetInfo structure. Loaded from API for branded objects\n"
  example: []
  syntax:
    content: public AssetInfo AssetInfo { get; }
    content.vb: Public ReadOnly Property AssetInfo As AssetInfo
    parameters: []
    return:
      type: Trivver.API.Model.AssetInfo
  overload: Trivver.Asset.AssetInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Trivver.Asset.GameObject
  commentId: P:Trivver.Asset.GameObject
  id: GameObject
  parent: Trivver.Asset
  langs:
  - csharp
  - vb
  name: GameObject
  nameWithType: Asset.GameObject
  fullName: Trivver.Asset.GameObject
  type: Property
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: GameObject
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
    startLine: 58
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nAsset game object\n"
  example: []
  syntax:
    content: public GameObject GameObject { get; set; }
    content.vb: Public Property GameObject As GameObject
    parameters: []
    return:
      type: UnityEngine.GameObject
  overload: Trivver.Asset.GameObject*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Trivver.Asset.Icon
  commentId: P:Trivver.Asset.Icon
  id: Icon
  parent: Trivver.Asset
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: Asset.Icon
  fullName: Trivver.Asset.Icon
  type: Property
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: Icon
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
    startLine: 75
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nBranded asse preview small image that displayed in SmartTab on the top.\n"
  example: []
  syntax:
    content: public Texture2D Icon { get; set; }
    content.vb: Public Property Icon As Texture2D
    parameters: []
    return:
      type: UnityEngine.Texture2D
  overload: Trivver.Asset.Icon*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Trivver.Asset.Image
  commentId: P:Trivver.Asset.Image
  id: Image
  parent: Trivver.Asset
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: Asset.Image
  fullName: Trivver.Asset.Image
  type: Property
  source:
    remote:
      path: src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: Image
    path: ../../trivver-unity-sdk/src/trivver-unity-sdk/Assets/Plugins/Trivver.RuntimeSDK/Asset.cs
    startLine: 92
  assemblies:
  - Trivver.RuntimeSDK
  namespace: Trivver
  summary: "\nBranded asset main image that is shown in the middle of SmartTab.\n"
  example: []
  syntax:
    content: public Texture2D Image { get; set; }
    content.vb: Public Property Image As Texture2D
    parameters: []
    return:
      type: UnityEngine.Texture2D
  overload: Trivver.Asset.Image*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Trivver
  commentId: N:Trivver
  isExternal: false
  name: Trivver
  nameWithType: Trivver
  fullName: Trivver
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Trivver.Asset.#ctor*
  commentId: Overload:Trivver.Asset.#ctor
  isExternal: false
  name: Asset
  nameWithType: Asset.Asset
  fullName: Trivver.Asset.Asset
- uid: Trivver.API.Model.AssetInfo
  commentId: T:Trivver.API.Model.AssetInfo
  parent: Trivver.API.Model
  isExternal: false
  name: AssetInfo
  nameWithType: AssetInfo
  fullName: Trivver.API.Model.AssetInfo
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Trivver.API.Model
  commentId: N:Trivver.API.Model
  isExternal: false
  name: Trivver.API.Model
  nameWithType: Trivver.API.Model
  fullName: Trivver.API.Model
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: false
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Trivver.Asset.IsEmpty*
  commentId: Overload:Trivver.Asset.IsEmpty
  isExternal: false
  name: IsEmpty
  nameWithType: Asset.IsEmpty
  fullName: Trivver.Asset.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Trivver.Asset.CreateEmpty*
  commentId: Overload:Trivver.Asset.CreateEmpty
  isExternal: false
  name: CreateEmpty
  nameWithType: Asset.CreateEmpty
  fullName: Trivver.Asset.CreateEmpty
- uid: Trivver.Asset
  commentId: T:Trivver.Asset
  parent: Trivver
  isExternal: false
  name: Asset
  nameWithType: Asset
  fullName: Trivver.Asset
- uid: Trivver.Asset.AssetInfo*
  commentId: Overload:Trivver.Asset.AssetInfo
  isExternal: false
  name: AssetInfo
  nameWithType: Asset.AssetInfo
  fullName: Trivver.Asset.AssetInfo
- uid: Trivver.Asset.GameObject*
  commentId: Overload:Trivver.Asset.GameObject
  isExternal: false
  name: GameObject
  nameWithType: Asset.GameObject
  fullName: Trivver.Asset.GameObject
- uid: Trivver.Asset.Icon*
  commentId: Overload:Trivver.Asset.Icon
  isExternal: false
  name: Icon
  nameWithType: Asset.Icon
  fullName: Trivver.Asset.Icon
- uid: UnityEngine.Texture2D
  commentId: T:UnityEngine.Texture2D
  parent: UnityEngine
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: Trivver.Asset.Image*
  commentId: Overload:Trivver.Asset.Image
  isExternal: false
  name: Image
  nameWithType: Asset.Image
  fullName: Trivver.Asset.Image
