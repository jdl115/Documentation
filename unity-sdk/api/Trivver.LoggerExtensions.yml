### YamlMime:ManagedReference
items:
- uid: Trivver.LoggerExtensions
  commentId: T:Trivver.LoggerExtensions
  id: LoggerExtensions
  parent: Trivver
  children:
  - Trivver.LoggerExtensions.Log(UnityEngine.ILogger,Trivver.LogTag,System.String)
  - Trivver.LoggerExtensions.Log(UnityEngine.ILogger,Trivver.LogTag,UnityEngine.LogType,System.String)
  - Trivver.LoggerExtensions.LogError(UnityEngine.ILogger,Trivver.LogTag,System.String)
  - Trivver.LoggerExtensions.LogFormat(UnityEngine.ILogger,Trivver.LogTag,UnityEngine.LogType,System.String,System.Object[])
  - Trivver.LoggerExtensions.LogWarning(UnityEngine.ILogger,Trivver.LogTag,System.String)
  langs:
  - csharp
  - vb
  name: LoggerExtensions
  nameWithType: LoggerExtensions
  fullName: Trivver.LoggerExtensions
  type: Class
  source:
    remote:
      path: src/Trivver.Libs/Trivver.Logging/Logging/LoggingExtensions.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: LoggerExtensions
    path: ../../trivver-unity-sdk/src/Trivver.Libs/Trivver.Logging/Logging/LoggingExtensions.cs
    startLine: 20
  assemblies:
  - Trivver.Logging
  namespace: Trivver
  summary: "\nUseful extensions for ILogger interface. Allow to call Log(LogTag, message) \n"
  example: []
  syntax:
    content: public static class LoggerExtensions
    content.vb: Public Module LoggerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Trivver.LoggerExtensions.Log(UnityEngine.ILogger,Trivver.LogTag,System.String)
  commentId: M:Trivver.LoggerExtensions.Log(UnityEngine.ILogger,Trivver.LogTag,System.String)
  id: Log(UnityEngine.ILogger,Trivver.LogTag,System.String)
  isExtensionMethod: true
  parent: Trivver.LoggerExtensions
  langs:
  - csharp
  - vb
  name: Log(ILogger, LogTag, String)
  nameWithType: LoggerExtensions.Log(ILogger, LogTag, String)
  fullName: Trivver.LoggerExtensions.Log(UnityEngine.ILogger, Trivver.LogTag, System.String)
  type: Method
  source:
    remote:
      path: src/Trivver.Libs/Trivver.Logging/Logging/LoggingExtensions.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: Log
    path: ../../trivver-unity-sdk/src/Trivver.Libs/Trivver.Logging/Logging/LoggingExtensions.cs
    startLine: 22
  assemblies:
  - Trivver.Logging
  namespace: Trivver
  syntax:
    content: public static void Log(this ILogger logger, LogTag tag, string message)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Log(logger As ILogger, tag As LogTag, message As String)
    parameters:
    - id: logger
      type: UnityEngine.ILogger
    - id: tag
      type: Trivver.LogTag
    - id: message
      type: System.String
  overload: Trivver.LoggerExtensions.Log*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Trivver.LoggerExtensions.Log(UnityEngine.ILogger,Trivver.LogTag,UnityEngine.LogType,System.String)
  commentId: M:Trivver.LoggerExtensions.Log(UnityEngine.ILogger,Trivver.LogTag,UnityEngine.LogType,System.String)
  id: Log(UnityEngine.ILogger,Trivver.LogTag,UnityEngine.LogType,System.String)
  isExtensionMethod: true
  parent: Trivver.LoggerExtensions
  langs:
  - csharp
  - vb
  name: Log(ILogger, LogTag, LogType, String)
  nameWithType: LoggerExtensions.Log(ILogger, LogTag, LogType, String)
  fullName: Trivver.LoggerExtensions.Log(UnityEngine.ILogger, Trivver.LogTag, UnityEngine.LogType, System.String)
  type: Method
  source:
    remote:
      path: src/Trivver.Libs/Trivver.Logging/Logging/LoggingExtensions.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: Log
    path: ../../trivver-unity-sdk/src/Trivver.Libs/Trivver.Logging/Logging/LoggingExtensions.cs
    startLine: 27
  assemblies:
  - Trivver.Logging
  namespace: Trivver
  syntax:
    content: public static void Log(this ILogger logger, LogTag tag, LogType logType, string message)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Log(logger As ILogger, tag As LogTag, logType As LogType, message As String)
    parameters:
    - id: logger
      type: UnityEngine.ILogger
    - id: tag
      type: Trivver.LogTag
    - id: logType
      type: UnityEngine.LogType
    - id: message
      type: System.String
  overload: Trivver.LoggerExtensions.Log*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Trivver.LoggerExtensions.LogFormat(UnityEngine.ILogger,Trivver.LogTag,UnityEngine.LogType,System.String,System.Object[])
  commentId: M:Trivver.LoggerExtensions.LogFormat(UnityEngine.ILogger,Trivver.LogTag,UnityEngine.LogType,System.String,System.Object[])
  id: LogFormat(UnityEngine.ILogger,Trivver.LogTag,UnityEngine.LogType,System.String,System.Object[])
  isExtensionMethod: true
  parent: Trivver.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogFormat(ILogger, LogTag, LogType, String, Object[])
  nameWithType: LoggerExtensions.LogFormat(ILogger, LogTag, LogType, String, Object[])
  fullName: Trivver.LoggerExtensions.LogFormat(UnityEngine.ILogger, Trivver.LogTag, UnityEngine.LogType, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Trivver.Libs/Trivver.Logging/Logging/LoggingExtensions.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: LogFormat
    path: ../../trivver-unity-sdk/src/Trivver.Libs/Trivver.Logging/Logging/LoggingExtensions.cs
    startLine: 32
  assemblies:
  - Trivver.Logging
  namespace: Trivver
  syntax:
    content: public static void LogFormat(this ILogger logger, LogTag tag, LogType logType, string format, params object[] args)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogFormat(logger As ILogger, tag As LogTag, logType As LogType, format As String, ParamArray args As Object())
    parameters:
    - id: logger
      type: UnityEngine.ILogger
    - id: tag
      type: Trivver.LogTag
    - id: logType
      type: UnityEngine.LogType
    - id: format
      type: System.String
    - id: args
      type: System.Object[]
  overload: Trivver.LoggerExtensions.LogFormat*
  nameWithType.vb: LoggerExtensions.LogFormat(ILogger, LogTag, LogType, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Trivver.LoggerExtensions.LogFormat(UnityEngine.ILogger, Trivver.LogTag, UnityEngine.LogType, System.String, System.Object())
  name.vb: LogFormat(ILogger, LogTag, LogType, String, Object())
- uid: Trivver.LoggerExtensions.LogError(UnityEngine.ILogger,Trivver.LogTag,System.String)
  commentId: M:Trivver.LoggerExtensions.LogError(UnityEngine.ILogger,Trivver.LogTag,System.String)
  id: LogError(UnityEngine.ILogger,Trivver.LogTag,System.String)
  isExtensionMethod: true
  parent: Trivver.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogError(ILogger, LogTag, String)
  nameWithType: LoggerExtensions.LogError(ILogger, LogTag, String)
  fullName: Trivver.LoggerExtensions.LogError(UnityEngine.ILogger, Trivver.LogTag, System.String)
  type: Method
  source:
    remote:
      path: src/Trivver.Libs/Trivver.Logging/Logging/LoggingExtensions.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: LogError
    path: ../../trivver-unity-sdk/src/Trivver.Libs/Trivver.Logging/Logging/LoggingExtensions.cs
    startLine: 37
  assemblies:
  - Trivver.Logging
  namespace: Trivver
  syntax:
    content: public static void LogError(this ILogger logger, LogTag tag, string message)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogError(logger As ILogger, tag As LogTag, message As String)
    parameters:
    - id: logger
      type: UnityEngine.ILogger
    - id: tag
      type: Trivver.LogTag
    - id: message
      type: System.String
  overload: Trivver.LoggerExtensions.LogError*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Trivver.LoggerExtensions.LogWarning(UnityEngine.ILogger,Trivver.LogTag,System.String)
  commentId: M:Trivver.LoggerExtensions.LogWarning(UnityEngine.ILogger,Trivver.LogTag,System.String)
  id: LogWarning(UnityEngine.ILogger,Trivver.LogTag,System.String)
  isExtensionMethod: true
  parent: Trivver.LoggerExtensions
  langs:
  - csharp
  - vb
  name: LogWarning(ILogger, LogTag, String)
  nameWithType: LoggerExtensions.LogWarning(ILogger, LogTag, String)
  fullName: Trivver.LoggerExtensions.LogWarning(UnityEngine.ILogger, Trivver.LogTag, System.String)
  type: Method
  source:
    remote:
      path: src/Trivver.Libs/Trivver.Logging/Logging/LoggingExtensions.cs
      branch: develop
      repo: https://sergeykondratov@gitblit.saritasa.com/r/trivver/unity-sdk.git
    id: LogWarning
    path: ../../trivver-unity-sdk/src/Trivver.Libs/Trivver.Logging/Logging/LoggingExtensions.cs
    startLine: 42
  assemblies:
  - Trivver.Logging
  namespace: Trivver
  syntax:
    content: public static void LogWarning(this ILogger logger, LogTag tag, string message)
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LogWarning(logger As ILogger, tag As LogTag, message As String)
    parameters:
    - id: logger
      type: UnityEngine.ILogger
    - id: tag
      type: Trivver.LogTag
    - id: message
      type: System.String
  overload: Trivver.LoggerExtensions.LogWarning*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Trivver
  commentId: N:Trivver
  isExternal: false
  name: Trivver
  nameWithType: Trivver
  fullName: Trivver
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Trivver.LoggerExtensions.Log*
  commentId: Overload:Trivver.LoggerExtensions.Log
  isExternal: false
  name: Log
  nameWithType: LoggerExtensions.Log
  fullName: Trivver.LoggerExtensions.Log
- uid: UnityEngine.ILogger
  commentId: T:UnityEngine.ILogger
  parent: UnityEngine
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: UnityEngine.ILogger
- uid: Trivver.LogTag
  commentId: T:Trivver.LogTag
  parent: Trivver
  isExternal: false
  name: LogTag
  nameWithType: LogTag
  fullName: Trivver.LogTag
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: false
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.LogType
  commentId: T:UnityEngine.LogType
  parent: UnityEngine
  isExternal: true
  name: LogType
  nameWithType: LogType
  fullName: UnityEngine.LogType
- uid: Trivver.LoggerExtensions.LogFormat*
  commentId: Overload:Trivver.LoggerExtensions.LogFormat
  isExternal: false
  name: LogFormat
  nameWithType: LoggerExtensions.LogFormat
  fullName: Trivver.LoggerExtensions.LogFormat
- uid: System.Object[]
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullname.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Trivver.LoggerExtensions.LogError*
  commentId: Overload:Trivver.LoggerExtensions.LogError
  isExternal: false
  name: LogError
  nameWithType: LoggerExtensions.LogError
  fullName: Trivver.LoggerExtensions.LogError
- uid: Trivver.LoggerExtensions.LogWarning*
  commentId: Overload:Trivver.LoggerExtensions.LogWarning
  isExternal: false
  name: LogWarning
  nameWithType: LoggerExtensions.LogWarning
  fullName: Trivver.LoggerExtensions.LogWarning
